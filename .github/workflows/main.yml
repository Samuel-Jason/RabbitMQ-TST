name: CI-CD

# Define os gatilhos para a pipeline
on: 
  push:
    branches: 
      - main # Quando houver push para a branch 'main'
  workflow_dispatch: # Permite execução manual pela interface

jobs:
  # === JOB DE INTEGRAÇÃO CONTÍNUA (CI) ===
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Passo 01 - Checkout do Código
        uses: actions/checkout@v4 # Ação para baixar o código
      - name: Passo 02 - Criar a imagem dos Microsserviços
        run: |
          echo "Comandos reais para docker build e tag aqui"
          # Ex: docker build -t meu-repo/microsservico:${{ github.sha }} .
      - name: Passo 03 - Subir as imagens para o Dockerhub
        run: |
          echo "Comandos reais para docker login e push aqui"
          # Ex: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # Ex: docker push meu-repo/microsservico:${{ github.sha }}

  # === JOB DE ENTREGA CONTÍNUA (CD) ===
  CD:
    runs-on: ubuntu-latest
    needs: [CI] # <<-- CRÍTICO: Garante que só roda DEPOIS do job CI terminar com sucesso
    steps:
      - name: Passo 01 - Configurar Credenciais AWS
        # Normalmente se usa uma Action para isso
        run: echo "Configurar o AWS CLI e credenciais secretas"
        # Ex: uses: aws-actions/configure-aws-credentials@v4
      - name: Passo 02 - Autenticar no Kubernetes (EKS/GKE/AKS)
        run: echo "Configurar kubectl para se conectar ao cluster"
        # Ex: aws eks update-kubeconfig --name seu-cluster --region sua-regiao
      - name: Passo 03 - Deploy dos Microsserviços no Kubernetes
        run: |
          echo "Comandos reais para deploy com kubectl ou helm aqui"
          # Ex: kubectl apply -f deploy.yaml
          # Ex: helm upgrade --install meu-app ./charts
